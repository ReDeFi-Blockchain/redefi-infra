name: relay-forkless-data

on:
  workflow_call:
  workflow_dispatch:


jobs:
  forkless-data:
    runs-on: [ self-hosted ]
    timeout-minutes: 1380
    name: relay-forkless-data
    continue-on-error: true         #Do not stop testing of matrix runs failed.  As it decided during PR review - it required 50/50& Let's check it with false.

    steps:
      - name: Skip if pull request is in Draft
        if: github.event.pull_request.draft == true
        run: exit 1

      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7
        with:
          ref: ${{ github.head_ref }}  #Checking out head commit

      # # Prepare SHA  
      # - name: Prepare SHA
      #   uses: ./.github/actions/prepare

      - name: Read .env file
        uses: xom9ikk/dotenv@v2.3.0

      - name: Pull polkadot image from official repository
        run: |
          docker pull parity/polkadot:v1.7.0

      - name: Prepare redefi-relay-runtime-mainnet container
        uses: ./.github/actions/buildContainer
        id: redefi-relay-runtime-mainnet
        with:
          container: redefi-relay-runtime
          tag: mainnet
          context: .docker
          dockerfile: Dockerfile-relay-runtime
          args: |
            --build-arg REDEFI_RELAY_RUNTIME=${{ env.REDEFI_RELAY_RUNTIME_MAINNET_VERSION }}          

      - name: Copy runtime wasm file to host
        run: |
          docker run -v $PWD:/infra --rm --entrypoint cp ${{ steps.redefi-relay-runtime-mainnet.outputs.name }} /redefi/redefi_runtime.compact.compressed.wasm /infra/

      - name: Prepare redefi-relay-runtime-latest container
        uses: ./.github/actions/buildContainer
        id: redefi-relay-runtime-latest
        with:
          container: redefi-relay-runtime
          tag: latest
          context: .docker
          dockerfile: Dockerfile-relay-runtime
          args: |
            --build-arg REDEFI_RELAY_RUNTIME=${{ env.REDEFI_RELAY_RUNTIME_LATEST_VERSION }}          

      - name: Extract wasms
        uses: ./.github/actions/extractDocker
        id: wasm
        with:
          image: ${{ steps.redefi-relay-runtime-latest.outputs.name }}
          directory: /redefi

      - name: Prepare redefi-relay mainnet container
        uses: ./.github/actions/buildContainer
        id: redefi-relay-mainnet
        with:
          container: redefi-relay
          tag: mainnet
          context: .docker
          dockerfile: Dockerfile-relay
          args: |
            --build-arg REDEFI_RELAY=${{ env.REDEFI_RELAY_MAINNET_VERSION }}     

      - name: Prepare redefi-parachain mainnet container
        uses: ./.github/actions/buildContainer
        id: redefi-parachain-mainnet
        with:
          container: redefi-parachain
          tag: mainnet
          context: .docker
          dockerfile: Dockerfile-parachain
          args: |
            --build-arg REDEFI_PARACHAIN=${{ env.REDEFI_PARACHAIN_MAINNET_VERSION }}     

      - uses: actions/setup-node@v4.0.2
        with:
          node-version: 20

      - name: Install baedeker
        uses: UniqueNetwork/baedeker-action/setup@v1-no-debug-output
        with:
          useCache: false

      - name: Setup library
        run: mkdir -p .baedeker/vendor/ && git clone https://github.com/UniqueNetwork/baedeker-library .baedeker/vendor/baedeker-library

      - name: Start network
        uses: UniqueNetwork/baedeker-action@v1-no-debug-output
        id: bdk
        with:
          jpath: |
            .baedeker/vendor
          tla-str: |
            relay_spec=${{ env.RELAY_CHAIN_TYPE }}-local
            fork_source=${{ env.RELAY_FORK_SOURCE }}            
          inputs: |
            .baedeker/relay-forkless-data.jsonnet
            snippet:(import 'baedeker-library/ops/rewrites.libsonnet').rewriteNodePaths({'bin/polkadot':{dockerImage:'parity/polkadot:v1.7.0'}})
            snippet:(import 'baedeker-library/ops/rewrites.libsonnet').rewriteNodePaths({'bin/redefi-relay':{dockerImage:'${{ steps.redefi-relay-mainnet.outputs.name }}'}})
            snippet:(import 'baedeker-library/ops/rewrites.libsonnet').rewriteNodePaths({'bin/redefi-collator':{dockerImage:'${{ steps.redefi-parachain-mainnet.outputs.name }}'}})

      - name: Ensure network is alive before upgrade
        working-directory: ./tests
        id: alive1
        if: ${{ !cancelled() && steps.bdk.outcome == 'success' }}
        run: |
          yarn
          ./scripts/wait_for_first_block.sh
        env:
          RPC_URL_MAIN: ${{ env.REDEFI_RELAY_HTTP_URL }}
          RPC_URL_SIBLING: ${{ env.REDEFI_RELAY_REDEFI_PARACHAIN_HTTP_URL }}
          CROSSCHAIN: ${{ env.CROSSCHAIN }}

      - name: "Reconcile: runtime is upgraded"
        working-directory: ./tests
        id: reconcile1
        if: ${{ !cancelled() && steps.alive1.outcome == 'success' }}
        run: |
          echo "Executing upgrade"
          yarn node --no-warnings=ExperimentalWarning --loader ts-node/esm scripts/relayAuthorizeEnactUpgrade.ts ${{ steps.wasm.outputs.dir }}/redefi_runtime.compact.compressed.wasm
        env:
          RPC_URL_MAIN: ${{ env.REDEFI_RELAY_HTTP_URL }}
          RPC_URL_SIBLING: ${{ env.REDEFI_RELAY_REDEFI_PARACHAIN_HTTP_URL }}
          CROSSCHAIN: ${{ env.CROSSCHAIN }}

      - name: Ensure network is alive after upgrade
        working-directory: ./tests
        id: alive2
        if: ${{ !cancelled() && steps.reconcile1.outcome == 'success' }}
        run: |
          yarn
          ./scripts/wait_for_first_block.sh
        env:
          RPC_URL_MAIN: ${{ env.REDEFI_RELAY_HTTP_URL }}
          RPC_URL_SIBLING: ${{ env.REDEFI_RELAY_REDEFI_PARACHAIN_HTTP_URL }}
          CROSSCHAIN: ${{ env.CROSSCHAIN }}

      - name: Run test:setup after upgrade
        working-directory: ./tests
        id: test-setup
        if: ${{ !cancelled() && steps.alive2.outcome == 'success' }}
        run: |
          echo "Ready to start test:setup"
          yarn test:setup
        env:
          RPC_URL_MAIN: ${{ env.REDEFI_RELAY_HTTP_URL }}
          RPC_URL_SIBLING: ${{ env.REDEFI_RELAY_REDEFI_PARACHAIN_HTTP_URL }}
          CROSSCHAIN: ${{ env.CROSSCHAIN }}

      - name: Run test:regular after upgrade
        working-directory: ./tests
        id: test-regular
        if: ${{ !cancelled() && steps.test-setup.outcome == 'success' }}
        run: |
          echo "Ready to start test:regular"
          yarn test:regular
        env:
          RPC_URL_MAIN: ${{ env.REDEFI_RELAY_HTTP_URL }}
          RPC_URL_SIBLING: ${{ env.REDEFI_RELAY_REDEFI_PARACHAIN_HTTP_URL }}
          CROSSCHAIN: ${{ env.CROSSCHAIN }}

      - name: Run test:serial after upgrade
        working-directory: ./tests
        id: test-serial
        if: ${{ !cancelled() && steps.test-setup.outcome == 'success' }}
        run: |
          echo "Ready to start test:serial"
          yarn test:serial
        env:
          RPC_URL_MAIN: ${{ env.REDEFI_RELAY_HTTP_URL }}
          RPC_URL_SIBLING: ${{ env.REDEFI_RELAY_REDEFI_PARACHAIN_HTTP_URL }}
          CROSSCHAIN: ${{ env.CROSSCHAIN }}

      - name: Run test:smoke for parachain after upgrade
        working-directory: ./tests
        id: test-smoke
        if: ${{ !cancelled() && steps.test-setup.outcome == 'success' }}
        run: |
          echo "Ready to start test:smoke"
          yarn test:smoke
        env:
          RPC_URL_MAIN: ${{ env.REDEFI_RELAY_REDEFI_PARACHAIN_HTTP_URL }}
          RPC_URL_SIBLING: ${{ env.REDEFI_RELAY_HTTP_URL }}
          CROSSCHAIN: ${{ env.CROSSCHAIN }}

      - name: Remove builder cache
        if: always()                   # run this step always
        run: |
          docker system prune -f -a
